<%= stylesheet_link_tag 'virtual_phone' %>

<div id="message"></div>

<div id="helpers">
	<%= link_to_function 'random number', 'add_random_number()', :class => 'orange_button' %>

	<% if logged_in? and current_user.number %>
		<%= link_to_function "add #{current_user.number}", "add_phone_number('#{current_user.number}')", :class => 'orange_button' %>
	<% end %>
</div>


<form action="/virtual_phone" method="post" id="new_phone_form">
<fieldset>
	<input name="authenticity_token" type="hidden" value="<%=form_authenticity_token if protect_against_forgery? %>" />
	<%= text_field_tag :phone, (current_user and current_user.number ? current_user.number : '') %>
	<%= submit_tag 'add phone' %>
</fieldset>
</form>

<% content_for :javascript_in_head do %>
	function random_int(){
		return Math.floor(Math.random()*10);
	}
	
	function add_random_number(){
		var phone = '999';
		for(var i=0;i<7;++i) phone += random_int(); // >
		add_phone_number(phone);
	}

	function add_phone_number(number){
		$.ajax({
			async:true,
			data:{phone: number},
			dataType:'script',
			type:'post',
			url:'/virtual_phone'
		});
	}
	
	
	
	function update_phone(phone) {
		$.ajax({
			dataType: 'script',
			url: '/virtual_phone/' + phone,
			error: function(){
				if ($('#sparrow_warning').length == 0)
					$('<div id="sparrow_warning"></div>').text('No Sparrow, start it yo.').insertAfter('#new_phone_form');
			},
			success: function(){
				if ($('#sparrow_warning').length != 0)
					$('#sparrow_warning').remove();
			}
		});
	}
	
	function start_polling(phone){
		update_phone(phone);
		if(typeof(periodically_call_remote_timers) == "undefined") periodically_call_remote_timers = new Array();
		periodically_call_remote_timers[phone] = setInterval(function(){
			update_phone.apply(null, [phone]);
		}, <%= Rails.env == 'test' ? '0.75' : '6' %> * 1000);

		var $this = $('#phone_' + phone);
		var status_html = '<a href="#" onclick="stop_polling(\''+phone+'\');return false">stop</a>' + 'polling for messages';
		$this.find('.status').removeClass('stopped').addClass('polling').html(status_html);
		
		restart_inactivity_timeout(phone);
	}
	
	function stop_polling(phone){
		clearInterval(periodically_call_remote_timers[phone]);
		var $this = $('#phone_' + phone);
		var status_html = '<a href="#" onclick="start_polling(\''+phone+'\');return false">start polling</a>' + 'stopped';		
		$this.find('.status').removeClass('polling').addClass('stopped').html(status_html);
	}
	
	function start_polling_if_needed(phone) {
		var $this = $('#phone_' + phone);
		if (! $this.find('.status').hasClass('polling')) start_polling(phone);
	}

	function start_inactivity_timeout(phone){
		if(typeof(inactivity_timeouts) == "undefined") inactivity_timeouts = new Array();
		inactivity_timeouts[phone] = setTimeout(function(){
			stop_polling(phone);
		}, <%= 3.minutes %> * 1000);
	}
	
	function stop_inactivity_timeout(phone) {
		if(typeof(inactivity_timeouts) == "undefined") return;
		clearInterval(inactivity_timeouts[phone]);
	}
	
	function restart_inactivity_timeout(phone) {
		stop_inactivity_timeout(phone);
		start_inactivity_timeout(phone);
	}
	
	function clear_entire_queue() {
		if (confirm('Are you Sure?\nThis will delete all messages sent on this system!')) {
			$.ajax({dataType:'script', url:'/virtual_phone/clear_entire_queue'});
		}
	}
	
<% end %>

<% content_for :dom_loaded_javascript do %>
$("#new_phone_form").submit(function(){
	add_phone_number($(this).find('#phone').val());
	return false;
});


	start_polling('queue');

<% end %>

<div id="phones">
	
	<div id="phone_queue" class="phone">
		<h3><%= link_to_function 'clear entire queue', 'clear_entire_queue()', :class => 'header_link' %>Phones</h3>
		<div style="height: 3em"></div>
		<h4><%= link_to_function 'clear', '$(this).parent().next().children().remove()', :class => 'header_link' %> Click on a phone</h4>
		<ul id="phones_in_queue">
		</ul>
		<div class="status">
			
		</div>
	</div>
	
	
</div>
<br class="c"/>
